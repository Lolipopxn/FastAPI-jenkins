pipeline {
  agent {
    docker {
      image 'python:3.11'
      args '-v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
    environment {
        SONARQUBE = credentials('sonar-token')
        HOME = "${WORKSPACE}"
        PIP_CACHE_DIR = "${WORKSPACE}/.pip-cache"
        PIP_DISABLE_PIP_VERSION_CHECK = '1'
    }
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Lolipopxn/FastAPI-jenkins.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh '''
                 python -m venv .venv
                 . .venv/bin/activate
                 python -m pip install --upgrade pip
                 pip install -r requirements.txt
                 pip install pytest coverage
                '''
            }
        }
        stage('Run Tests & Coverage') {
            steps {
                sh '''
                . .venv/bin/activate
                python -m pytest --maxfail=1 --disable-warnings -q \
                --cov=app --cov-report=xml:coverage.xml tests/
                '''
  }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'sonar-scanner'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                sh 'docker build -t fastapi-app:latest .'
            }
        }
        stage('Deploy Container') {
            steps {
               sh '''
                 docker rm -f fastapi-app || true
                 docker run -d --name fastapi-app -p 8000:8000 fastapi-app:latest
                '''
            }
        }
    }
    post {
        always {
            echo "Pipeline finished"
        }
    }
}